[{"/home/praju/Desktop/Inframind/inframind/webclient/src/components/Topbar.js":"1","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Dashboard.js":"2","/home/praju/Desktop/Inframind/inframind/webclient/src/index.js":"3","/home/praju/Desktop/Inframind/inframind/webclient/src/components/AllUsers.js":"4","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Detail.js":"5","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Param.js":"6","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Sidebar.js":"7","/home/praju/Desktop/Inframind/inframind/webclient/src/components/History.js":"8","/home/praju/Desktop/Inframind/inframind/webclient/src/components/CountAnal.js":"9","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Content.js":"10","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Gallery.js":"11","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Piecount.js":"12","/home/praju/Desktop/Inframind/inframind/webclient/src/reportWebVitals.js":"13","/home/praju/Desktop/Inframind/inframind/webclient/src/App.js":"14"},{"size":1010,"mtime":1613048470491,"results":"15","hashOfConfig":"16"},{"size":3618,"mtime":1613049982467,"results":"17","hashOfConfig":"16"},{"size":547,"mtime":1611577095388,"results":"18","hashOfConfig":"16"},{"size":3328,"mtime":1613102537440,"results":"19","hashOfConfig":"16"},{"size":4678,"mtime":1613103232957,"results":"20","hashOfConfig":"16"},{"size":4828,"mtime":1613100140780,"results":"21","hashOfConfig":"16"},{"size":1433,"mtime":1613039051798,"results":"22","hashOfConfig":"16"},{"size":1162,"mtime":1611585008227,"results":"23","hashOfConfig":"16"},{"size":2462,"mtime":1612615400748,"results":"24","hashOfConfig":"16"},{"size":685,"mtime":1612611876965,"results":"25","hashOfConfig":"16"},{"size":4764,"mtime":1613057055076,"results":"26","hashOfConfig":"16"},{"size":2326,"mtime":1612678376531,"results":"27","hashOfConfig":"16"},{"size":362,"mtime":1611492341380,"results":"28","hashOfConfig":"16"},{"size":608,"mtime":1612684864165,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"j5n6e1",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/praju/Desktop/Inframind/inframind/webclient/src/components/Topbar.js",["68","69"],"import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAlignLeft, faUserCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Navbar,\r\n  \r\n} from \"reactstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Topbar() {\r\n  return (\r\n      <div className=\"topbar\">\r\n        \r\n    <Navbar\r\n      color=\"light\"\r\n      light\r\n      className=\"shadow-sm p-3 mb-5 bg-white mr-auto \" style={{minHeight:\"60px\",minWidth:\"100%\"}} >\r\n\r\n      <ul class=\"nav navbar-nav navbar-right flex-row justify-content-md-center justify-content-start flex-nowrap\">\r\n            <li class=\"nav-item\" style={{marginLeft:\"800px\"}}> \r\n            <b style={{color:\"#008cec\"}}>Admin</b>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n            <span><FontAwesomeIcon icon={faUserCircle} style={{color:\"#008cec\"}} size=\"lg\" /></span>\r\n             </li>\r\n        </ul>\r\n\r\n\r\n\r\n\r\n      </Navbar>  \r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Topbar\r\n\r\n",["70","71"],"/home/praju/Desktop/Inframind/inframind/webclient/src/components/Dashboard.js",["72"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios';\nimport CountAnal from './CountAnal';\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport Piecount from './Piecount';\n\nfunction Dashboard() {\n    const [analysis,setAnalysis]=useState({\n        id:0,\n        diabetesCount:0,\n        preDiabetesCount:0 ,\n        hypoximeaCount: 0,\n        asthamaCount:0 ,\n        bronchiCount:0,\n        chdCount: 0,\n        });\n        const [userCount,setUserCount]=useState(0);\n        const [riskCount,setRiskCount]=useState(0);\n        const percentAtRisk=Math.floor((riskCount/userCount)*100);\n\n        const data = [\n            { name: \"Diabetes\", pv: analysis.diabetesCount },\n            { name: \"Prediabetes\", pv: analysis.preDiabetesCount},\n            { name: \"Hypoxemia\", pv: analysis.hypoximeaCount },\n            { name: \"Asthama\", pv: analysis.asthamaCount},\n            { name: \"Bronchitis\", pv: analysis.bronchiCount},\n            { name: \"CHD\", pv: analysis.chdCount},\n           \n          ];\n          const datap = [\n            { name: \"Diabetes\", value: analysis.diabetesCount },\n            { name: \"Prediabetes\", value: analysis.preDiabetesCount},\n            { name: \"Hypoxemia\", value: analysis.hypoximeaCount },\n            { name: \"Asthama\", value: analysis.asthamaCount},\n            { name: \"Bronchitis\", value: analysis.bronchiCount},\n            { name: \"CHD\", value: analysis.chdCount},\n          \n          ];\n    \n    useEffect(()=>{\n        axios.post('http://192.168.43.157:4000/user/fetchAnalysis').then((res) => {\n          setAnalysis(res.data.data);\n         \n        }).catch(err => console.log(err))  ;\n\n        axios.post('http://192.168.43.157:4000/user/fetchRiskCount').then((res) => {\n          setRiskCount(res.data);\n         \n        }).catch(err => console.log(err))  ;\n\n        axios.post('http://192.168.43.157:4000/user/userAnalysis').then((res) => {\n            setUserCount(res.data);\n            console.log(res.data);\n          }).catch(err => console.log(err))  ;\n      },[]);\n    return (\n <div >\n\n<Col className=\"cardsbody\" md={{ size: 16, offset:1}}>\n    <Row>\n      <Col sm=\"3\" md={{ offset:0}}>\n        <Card body className=\"dashCard text-center\" >\n        <Row >\n         <Col>\n          <CardText tag=\"h1\"  className=\"nocontent\">{userCount} </CardText>\n          <CardTitle tag=\"h5\" className=\"lbcontent\">Employees</CardTitle>\n         </Col>\n        \n          </Row>\n        </Card>\n      </Col>\n      <Col sm=\"3\" md={{ offset:1}}>\n        <Card body className=\"dashCard text-center\"  >\n        <Row>\n         <Col>\n          <CardText tag=\"h1\"  className=\"nocontent\">{riskCount} </CardText>\n          <CardTitle tag=\"h5\" className=\"lbcontent\">At Risk</CardTitle>\n         </Col>\n        \n          </Row>\n        </Card>\n      </Col>\n      <Col sm=\"3\" md={{ offset:1}}>\n        <Card body className=\"dashCard text-center\"  >\n        <Row>\n         <Col>\n          <CardText tag=\"h1\"  className=\"nocontent\">{percentAtRisk}<span>%</span> </CardText>\n          <CardTitle tag=\"h5\" className=\"lbcontent\">% At Risk</CardTitle>\n         </Col>\n        \n          </Row>\n        </Card>\n      </Col>\n    </Row>\n    </Col>\n\n    <div className=\"analytics\">\n     <div className=\"horizantalbar\">\n      \n       <CountAnal   data={data} xKey=\"name\" yKey=\"pv\"/>\n       <center><p style={{color:\"gray\"}}>Disease Vs Number of employees at risk</p></center>\n     </div>\n     <div className=\"piebar\">\n      <Piecount data={datap}></Piecount>\n     </div>\n\n    </div>\n            \n        </div>\n    )\n}\n\nexport default Dashboard\n",["73","74"],"/home/praju/Desktop/Inframind/inframind/webclient/src/index.js",[],"/home/praju/Desktop/Inframind/inframind/webclient/src/components/AllUsers.js",["75","76","77","78","79"],"import React,{useState,useEffect} from \"react\";\nimport styled from 'styled-components';\nimport Detail from './Detail';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button,Row,Col,Label,Input,Badge\n} from 'reactstrap';\nimport axios from 'axios';\n\nconst Section= styled.div`\ndisplay:flex;\nflex-direction:column;\n\n`;\n\n\nfunction AllUsers() {\n  const[employeeName,setEmployeeName]=useState('');\n  const [users,setUsers]=useState([]);\n\n  const[cardClick,setCardClick]=useState(false);\n  const [clickedIndex,setClickIndex]=useState(-1);\n  console.log(\"data=\",users[clickedIndex]);\n  useEffect(()=>{\n    axios.post('http://192.168.43.157:4000/user/fetchUsers').then((res) => {\n      console.log(res.data.data)\n      setUsers(users=>[...users,...res.data.data])\n   \n    }).catch(err => console.log(err))  ;\n  },[]);\n   \n   function changeProp()\n   {\n  \n     setCardClick(false);\n   }\n\n   function showStatus(stat){\n     if(stat==0){\n       return(<span><FontAwesomeIcon icon={faCircle} size=\"sm\" color=\"green\" /></span>)\n     }\n     if(stat==1){\n       return(<span><FontAwesomeIcon icon={faCircle} size=\"sm\" color=\"orange\" /></span>)\n     }\n     if (stat==2){\n      return(<span><FontAwesomeIcon icon={faCircle} size=\"sm\" color=\"red\" /></span>)\n     }\n   }\n  return (\n    \n\n    <Section style={{color:\"black\"}}>\n\n      {cardClick ? \n      <div>\n    \n      \n       <Detail changePr={changeProp} currentUser={users[clickedIndex]}/></div>\n      :<div>\n       <div>\n       <Row>\n         <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n            <h2>Users Board</h2>\n         </Col>\n       </Row>\n         <Row>\n           <Col sm=\"1\" md={{  offset: 3 }}> <Label className=\"text-muted\">Employee's Name</Label></Col>\n           <Col sm=\"4\"><Input value={employeeName}  onChange={text => setEmployeeName (text.target.value)}></Input></Col>\n           <Col> <Button color=\"info\" onClick={()=>{ setEmployeeName('') }}\n            outline>\n            Reset\n           <Badge color=\"secondary\"></Badge>\n      </Button></Col>\n         </Row>\n       </div>\n \n        <div>\n           {users.filter(user => user.name.includes(employeeName)).map((filteredUser,index) => \n         <Col  key={index} sm=\"12\" md={{ size: 8, offset: 2}} style={{padding:'2px'}} >\n         <Card onClick={()=>{\n           setCardClick(true);\n           console.log(\"index=\",index);\n           const ind= users.indexOf(filteredUser);\n           setClickIndex(ind);\n           setEmployeeName('');\n           console.log(\"index of clicked card-\",clickedIndex);\n           }} >\n         <CardBody>\n           <Row>\n           <Col sm=\"6\">\n              <CardTitle tag=\"h6\">{filteredUser.name}</CardTitle>\n           </Col>\n          <Col sm=\"2\" md={{ offset: 3 }}>\n            \n            {showStatus(filteredUser.healthStatus)}\n          </Col>\n           </Row>\n           <Row>\n           <Col sm=\"6\">\n           <CardSubtitle tag=\"h6\"style={{color:\"#81a9c4\"}}className=\"mb-2\">{filteredUser.email}</CardSubtitle>\n           </Col>\n           </Row>\n         \n         </CardBody>\n       </Card></Col>)}\n       </div>\n       </div>\n      }\n     \n    </Section>\n  );\n}\n\nexport default AllUsers;\n","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Detail.js",["80","81","82","83"],"/home/praju/Desktop/Inframind/inframind/webclient/src/components/Param.js",["84"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThermometerFull,faHeartbeat,faTint,faDisease,faVial,faCircleNotch} from '@fortawesome/free-solid-svg-icons'\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport '../styles/Detail.css';\n\nfunction Param(props) {\n\n  function colorTemperature(tempra){\n    if(tempra>=36 & tempra<=37.69){\n      return(\n        <span style={{color:\"green\"}}>{tempra}</span>\n      )\n    }else{\n      return(\n        <span style={{color:\"red\"}}>{tempra}</span>\n      )\n    }\n  }\n  function colorHeart(hrate){\n    if(hrate<=100 & hrate>=60){\n      return(\n        <span style={{color:\"green\"}}>{hrate}</span>\n      )\n    }else{\n      return(\n        <span style={{color:\"red\"}}>{hrate}</span>\n      )\n    }\n  }\n\n  function colorbp(bpsys,bpdy){\n    if((bpsys<=120 & bpsys>=90) | (bpdy<=80 & bpdy>=60)){\n      return(\n        <span style={{color:\"green\"}}>{bpsys}/{bpdy}</span>\n      )\n    }else{\n      return(\n        <span style={{color:\"red\"}}>{bpsys}/{bpdy}</span>\n      )\n    }\n  }\n  \n  function colorglu(glu){\n    if(glu<=140 & glu>=100){\n      return(\n        <span style={{color:\"green\"}}>{glu}</span>\n      )\n    }else{\n      return(\n        <span style={{color:\"red\"}}>{glu}</span>\n      )\n    }\n  }\n  function coloroxy(oxy){\n    if(oxy<=100 & oxy>=95){\n      return(\n        <span style={{color:\"green\"}}>{oxy}</span>\n      )\n    }else{\n      return(\n        <span style={{color:\"red\"}}>{oxy}</span>\n      )\n    }\n  }\n  function colorchol(chol){\n    if(chol<=200 & chol>=150){\n      return(\n        <span style={{color:\"green\"}}>{chol}</span>\n      )\n    }else{\n      return(\n        <span style={{color:\"red\"}}>{chol}</span>\n      )\n    }\n  }\n  return (\n    <div className=\"body\" >\n        <br></br>\n    <center>\n    <Col md={{ size: 12}}>\n    <Row >\n      <Col sm=\"4\">\n        <Card body className=\"rowCard\">\n        <Row>\n         <Col sm=\"1\"><span><FontAwesomeIcon icon={faThermometerFull} size=\"4x\" color=\"white\" /></span></Col>\n         <Col>\n          <CardTitle tag=\"h5\" className=\"content\"> Body Temperature</CardTitle>\n          <CardText tag=\"h2\">{colorTemperature(props.hp.temprature)} <span style={{fontSize:\"20px\",color:\"gray\"}}>°C</span></CardText>\n          </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col sm=\"4\">\n        <Card body className=\"rowCard\" >\n        <Row>\n         <Col sm=\"2\"><span><FontAwesomeIcon icon={faHeartbeat} size=\"4x\" color=\"white\" /></span></Col>\n         <Col>\n          <CardTitle tag=\"h5\" className=\"content\">Heart Rate</CardTitle>\n          <CardText tag=\"h3\"  className=\"content\">{colorHeart(props.hp.heartRate)} <span style={{fontSize:\"20px\",color:\"gray\"}}>bpm</span></CardText>\n          </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col sm=\"4\">\n        <Card body className=\"rowCard\">\n        <Row>\n         <Col sm=\"2\"><span><FontAwesomeIcon icon={faTint} size=\"4x\" color=\"white\" /></span></Col>\n         <Col>\n          <CardTitle tag=\"h5\" className=\"content\">Blood Pressure</CardTitle>\n          <CardText tag=\"h2\"  className=\"content\">{colorbp(props.hp.sustolicbp,props.hp.diastolicbb)} <span style={{fontSize:\"20px\",color:\"gray\"}}>mmHg</span></CardText>\n          </Col>c\n          </Row>\n        </Card>\n      </Col>\n      \n    </Row>\n    <br/>\n    <Row>\n    <Col sm=\"4\">\n        <Card body className=\"rowCard\" >\n        <Row>\n         <Col sm=\"2\"><span><FontAwesomeIcon icon={faDisease} size=\"4x\" color=\"white\" /></span></Col>\n         <Col>\n          <CardTitle tag=\"h5\" className=\"content\">Cholestrol</CardTitle>\n          <CardText tag=\"h2\"  className=\"content\">{colorchol(props.hp.cholestrol)} <span style={{fontSize:\"20px\",color:\"gray\"}}>mg/dl</span></CardText>\n          </Col>\n          </Row>\n        </Card>\n      </Col>   \n    <Col sm=\"4\">\n        <Card body className=\"rowCard\" >\n        <Row>\n         <Col sm=\"2\"><span><FontAwesomeIcon icon={faVial} size=\"4x\" color=\"white\" /></span></Col>\n         <Col>\n          <CardTitle tag=\"h5\" className=\"content\">Glucose</CardTitle>\n          <CardText tag=\"h2\"  className=\"content\">{colorglu(props.hp.glucose)} <span style={{fontSize:\"20px\",color:\"gray\"}}>mmol/L</span></CardText>\n          </Col>\n          </Row>\n        </Card>\n      </Col>   \n      <Col sm=\"4\">\n        <Card body className=\"rowCard\" >\n        <Row>\n         <Col sm=\"1\"><span><FontAwesomeIcon icon={faCircleNotch} size=\"4x\" color=\"white\" /></span></Col>\n         <Col>\n          <CardTitle tag=\"h5\" className=\"content\">Oxygen</CardTitle>\n          <CardText tag=\"h2\"  className=\"content\">{coloroxy(props.hp.oxygen)} <span style={{fontSize:\"20px\",color:\"gray\"}}>%</span></CardText>\n          </Col>\n          </Row>\n        </Card>\n      </Col>   \n\n    </Row>\n    </Col>\n    </center>\n    </div>\n  );\n}\n\nexport default Param;\n","/home/praju/Desktop/Inframind/inframind/webclient/src/components/Sidebar.js",["85"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faClipboardList,faSignOutAlt,faCrown } \r\nfrom \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavItem, NavLink, Nav } from \"reactstrap\";\r\nimport Logo from '../images/smalllogo.png';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nconst SideBar = () => (\r\n  <div className=\"sidebar\">\r\n    \r\n    <div className=\"side-menu\" >\r\n<Nav vertical style={{marginTop:\"30px\"}}className=\"list-unstyled pb-3\">\r\n     \r\n      <center> <img style={{width:\"160px\"}}  src={Logo}/> </center> \r\n      <br/>\r\n      <center> <h3 style={{color:\"white\"}}>LiveHealth</h3> </center>\r\n        <NavItem>\r\n        <NavLink tag={Link} to={\"/\"}  className=\"inactive\"  >\r\n           \r\n            <FontAwesomeIcon icon={faCrown} className=\"mr-2\" />\r\n            Dashboard\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n    <NavItem>\r\n         \r\n          <NavLink tag={Link} to={\"/AllUsers\"}  className=\"inactive\"  >\r\n            <FontAwesomeIcon icon={faClipboardList} className=\"mr-2\" />\r\n            UserBoard\r\n          </NavLink>\r\n    </NavItem>\r\n\r\n    <NavItem>\r\n          <NavLink tag={Link} to={\"/LogOut\"} className=\"inactive\">\r\n            <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-2\" />\r\n            LogOut\r\n          </NavLink>\r\n    </NavItem>\r\n\r\n        \r\n</Nav>\r\n   \r\n    </div>\r\n\r\n</div>\r\n\r\n);\r\n\r\n\r\nexport default SideBar;\r\n","/home/praju/Desktop/Inframind/inframind/webclient/src/components/History.js",["86"],"import React,{useState} from \"react\";\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default History = ()=> {\n \n  const [startDate, setStartDate] = useState(new Date());\n  const [employeeId,setEmployeeId]=useState('');\n  const handleFinalSubmit = e => {\n    console.log(startDate,employeeId);\n  };\n  return (\n  <div>\n    <Row>\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n        <h2>Leaderboard</h2>\n      </Col>\n    </Row>\n    <Row className=\"mt-4\">\n      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n        <Form>\n          \n        <FormGroup>\n        <Label> Date </Label>\n        <DatePicker  selected={startDate}  onChange={date => setStartDate(date)} />\n      \n       </FormGroup>\n          <FormGroup>\n            <Label for=\"id\"></Label>\n            <Input value={employeeId}  onChange={text => setEmployeeId(text.target.value)}\n            ></Input>\n          </FormGroup>\n          <Button onClick={handleFinalSubmit}>Submit</Button>\n        </Form>\n      </Col>\n    </Row>\n  </div> \n  );\n};","/home/praju/Desktop/Inframind/inframind/webclient/src/components/CountAnal.js",["87"],"import React, { useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Cell,\n  Text\n} from \"recharts\";\n\n\n\nconst blues = [\n  [\"#457AA6\"],\n  [\"#457AA6\", \"#E3EBF2\"],\n  [\"#264F73\", \"#457AA6\", \"#E3EBF2\"],\n  [\"#264F73\", \"#457AA6\", \"#A2BBD2\", \"#E3EBF2\"],\n  [\"#1A334A\", \"#264F73\", \"#457AA6\", \"#A2BBD2\", \"#E3EBF2\"]\n];\n\nconst getColor = (length, index) => {\n  if (length <= blues.length) {\n    return blues[length - 1][index];\n  }\n\n  return blues[blues.length - 1][index % blues.length];\n};\n\n\n\nconst YAxisLeftTick = ({ y, payload: { value } }) => {\n  return (\n    <Text x={0} y={y} textAnchor=\"start\" verticalAnchor=\"middle\" scaleToFit>\n      {value}\n    </Text>\n  );\n};\n\nlet ctx;\n\nexport const measureText14HelveticaNeue = text => {\n  if (!ctx) {\n    ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    ctx.font = \"14px 'Helvetica Neue\";\n  }\n\n  return ctx.measureText(text).width;\n};\n\nconst BAR_AXIS_SPACE = 40;\n\nconst  CountAnal = ({ data, yKey, xKey }) => {\n  const maxTextWidth = useMemo(\n    () =>\n      data.reduce((acc, cur) => {\n        const value = cur[yKey];\n        const width = measureText14HelveticaNeue(value.toLocaleString());\n        if (width > acc) {\n          return width;\n        }\n        return acc;\n      }, 0),\n    [data, yKey]\n  );\n\n  return (\n    <ResponsiveContainer width={\"80%\"} height={50 * data.length} debounce={50} >\n   \n      <BarChart\n        data={data}\n        layout=\"vertical\"\n        margin={{ left: 30, right: maxTextWidth + (BAR_AXIS_SPACE - 1) }}\n      >\n        <XAxis hide axisLine={false} type=\"number\" />\n        <YAxis\n          yAxisId={0}\n          dataKey={xKey}\n          type=\"category\"\n          axisLine={false}\n          tickLine={false}\n          tick={YAxisLeftTick}\n         \n        />\n        <YAxis\n          orientation=\"right\"\n          yAxisId={1}\n          dataKey={yKey}\n          type=\"category\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={value => value.toLocaleString()}\n          mirror\n          tick={{\n            transform: `translate(${maxTextWidth + BAR_AXIS_SPACE}, 0)`\n          }}\n        />\n        <Bar dataKey={yKey} minPointSize={2} barSize={32}>\n          {data.map((d, idx) => {\n            return <Cell key={d[xKey]} fill={getColor(data.length, idx)} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\n\nexport default CountAnal;",["88","89"],"/home/praju/Desktop/Inframind/inframind/webclient/src/components/Content.js",[],"/home/praju/Desktop/Inframind/inframind/webclient/src/components/Gallery.js",["90","91","92","93","94","95","96","97"],"/home/praju/Desktop/Inframind/inframind/webclient/src/components/Piecount.js",[],"/home/praju/Desktop/Inframind/inframind/webclient/src/reportWebVitals.js",[],"/home/praju/Desktop/Inframind/inframind/webclient/src/App.js",["98","99"],{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":21},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"100","severity":1,"message":"109","line":4,"column":16,"nodeType":"102","messageId":"103","endLine":4,"endColumn":22},{"ruleId":"105","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"100","severity":1,"message":"112","line":8,"column":9,"nodeType":"102","messageId":"103","endLine":8,"endColumn":16},{"ruleId":"100","severity":1,"message":"113","line":8,"column":18,"nodeType":"102","messageId":"103","endLine":8,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":42,"column":13,"nodeType":"116","messageId":"117","endLine":42,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":45,"column":13,"nodeType":"116","messageId":"117","endLine":45,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":48,"column":14,"nodeType":"116","messageId":"117","endLine":48,"endColumn":16},{"ruleId":"100","severity":1,"message":"112","line":10,"column":11,"nodeType":"102","messageId":"103","endLine":10,"endColumn":18},{"ruleId":"100","severity":1,"message":"113","line":10,"column":20,"nodeType":"102","messageId":"103","endLine":10,"endColumn":28},{"ruleId":"118","severity":1,"message":"119","line":45,"column":5,"nodeType":"120","endLine":45,"endColumn":7,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":77,"column":22,"nodeType":"124","endLine":77,"endColumn":40},{"ruleId":"100","severity":1,"message":"109","line":3,"column":16,"nodeType":"102","messageId":"103","endLine":3,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":16,"column":16,"nodeType":"127","endLine":16,"endColumn":58},{"ruleId":"105","severity":1,"message":"128","line":5,"column":16,"nodeType":"102","messageId":"129","endLine":5,"endColumn":23},{"ruleId":"100","severity":1,"message":"130","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},{"ruleId":"105","replacedBy":"131"},{"ruleId":"107","replacedBy":"132"},{"ruleId":"100","severity":1,"message":"133","line":10,"column":30,"nodeType":"102","messageId":"103","endLine":10,"endColumn":38},{"ruleId":"100","severity":1,"message":"134","line":10,"column":39,"nodeType":"102","messageId":"103","endLine":10,"endColumn":44},{"ruleId":"100","severity":1,"message":"135","line":11,"column":5,"nodeType":"102","messageId":"103","endLine":11,"endColumn":14},{"ruleId":"100","severity":1,"message":"136","line":11,"column":16,"nodeType":"102","messageId":"103","endLine":11,"endColumn":28},{"ruleId":"100","severity":1,"message":"109","line":11,"column":30,"nodeType":"102","messageId":"103","endLine":11,"endColumn":36},{"ruleId":"100","severity":1,"message":"137","line":11,"column":51,"nodeType":"102","messageId":"103","endLine":11,"endColumn":56},{"ruleId":"118","severity":1,"message":"138","line":43,"column":9,"nodeType":"120","endLine":43,"endColumn":11,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":126,"column":32,"nodeType":"142","messageId":"143","endLine":126,"endColumn":61,"fix":"144"},{"ruleId":"100","severity":1,"message":"145","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":15},{"ruleId":"100","severity":1,"message":"146","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":16},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'faAlignLeft' is defined but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'Button' is defined but never used.",["147"],["148"],"'CardImg' is defined but never used.","'CardText' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.currentUser.predictionId'. Either include it or remove the dependency array.","ArrayExpression",["149"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Read-only global 'History' should not be modified.","nativeReassign","'ReactDOM' is defined but never used.",["147"],["148"],"'CardBody' is defined but never used.","'Media' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'props.uid'. Either include it or remove the dependency array.",["150"],"no-whitespace-before-property","Unexpected whitespace before property includes.","MemberExpression","unexpectedWhitespace",{"range":"151","text":"152"},"'History' is defined but never used.","'AllUsers' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},[4373,4375],".","Update the dependencies array to be: [props.currentUser.predictionId]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.uid]",{"range":"159","text":"160"},[1192,1194],"[props.currentUser.predictionId]",[1568,1570],"[props.uid]"]